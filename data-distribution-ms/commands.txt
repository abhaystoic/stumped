- Creating Python 3 virtualenv

virtualenv -p python3 ../../venv_stumped_ms1_data_collection

- git configuration

git remote show origin
git remote set-url origin git+ssh://git@github.com/abhaystoic/stumped.git


- Configuring RabbitMQ

- Installing Erlang

Source: https://computingforgeeks.com/how-to-install-latest-erlang-on-ubuntu-18-04-lts/

wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | sudo apt-key add -
echo "deb https://packages.erlang-solutions.com/ubuntu bionic contrib" | sudo tee /etc/apt/sources.list.d/rabbitmq.list
sudo apt update
sudo apt -y install erlang

- Installing RabbitMQ

wget -O- https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc | sudo apt-key add -
wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -
echo "deb https://dl.bintray.com/rabbitmq/debian $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/rabbitmq.list
sudo apt update
sudo apt -y install rabbitmq-server

sudo rabbitmqctl add_user admin ********
sudo rabbitmqctl add_vhost vhost
sudo rabbitmqctl set_user_tags admin admin_tag
sudo rabbitmqctl set_permissions -p vhost admin ".*" ".*" ".*"

- Execution

- Start celery worker
celery worker -A fetch_headlines --loglevel=info -f /app/celery-beat-logs/worker.log &

- Start celery beat scheduler
celery -A fetch_headlines beat --loglevel=info -f /app/celery-beat-logs/beat.log &

- Kill Celery tasks
ps auxww | grep 'celery worker' | awk '{print $2}' | xargs kill
ps auxww | grep 'beat' | awk '{print $2}' | xargs kill

- Build docker image
docker build . -t worker:latest --rm
docker-compose up -d --build

- Remove unused docker images
docker rmi $(docker images -f dangling=true -q)

- Remove stopped containers:
docker rm $(docker ps -a -q)

- Stop all running containers
docker stop $(docker ps -aq)

- If you change a serviceâ€™s Dockerfile or the contents of its build directory, run
the followig to rebuild it:
docker-compose build

- Create and start a specific container
docker-compose  up -d --build covid19-ms

- Start a specific container/service
docker-compose start elastic-search-ms

- Stop all running containers
docker stop $(docker ps -a -q)

- SSH to container:
 docker exec -it data-distribution-ms-container /bin/bash

- To check  if a port is open:
sudo nc localhost 56733 < /dev/null; echo $?

- Docker network issue solution:
https://forums.docker.com/t/docker-pull-results-in-request-canceled-while-waiting-for-connection-client-timeout-exceeded-while-awaiting-headers/73064/7

- List all docker networks:
docker network ls

- It should give you your public IP address as seen from another location on the internet:
curl -4 icanhazip.com

- Check Apache2 server configuration:
apache2ctl -S

- Restart apache
/etc/init.d/apache2 restart

- List RabbitMQ users:
rabbitmqctl list_users

- Docker logs:
docker-compose logs -f -t

- Docker copy file from container:
docker cp <container ID>:/var/lib/rabbitmq/mongodb_backup .

- Docker memory usage, CPU usage etc.
docker stats --all

- Setting up Ubuntu server:
https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-18-04

- Nginx:
https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04
sudo apt install nginx
systemctl status nginx
sudo ufw allow 'Nginx HTTP'
sudo service nginx restart

- /etc/nginx/sites-available

- https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-18-04

- mongodb get last inserted record:
db.headline.find({}).sort({$natural:-1}).limit(1)

- Connect with mongo
mongo admin --host localhost --port $MONGODB_PORT -u $MONGO_USER -p $MONGO_PWD
mongo admin --host localhost --port $MONGODB_PORT -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD

- mongodump --host localhost --port $MONGODB_PORT -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --out ~/mongodb_backup

- supervisord
supervisord -n --configuration=supervisord.conf --directory=~/github/stumped/all-news-ms/src/app --logfile=supervisord.log --loglevel=trace

- supervisord all-news
supervisord -n --configuration=supervisord.conf --directory=~/github/stumped/data-distribution-ms/src/celery_dd_tasks --logfile=all_news/supervisord.log --loglevel=trace

- Get list of directories and usages
sudo du -h --max-depth=1 | sort -hr

- Running Flask app locally
sudo env FLASK_APP=app.py python3 -m flask run

- Running Elasticsearch using Docker Compose
check with the vm.max_map_count setting in /etc/sysctl.conf: Apply new count as elasticsearch expects
sysctl -w vm.max_map_count=262144 (make a permanent entry in /etc/sysctl.conf)
Also, don't forget to run the following command for docker container otherwise we will get permission denied error:
sudo chown 1000:1000 ~/docker-data/elastic-search

https://medium.com/@JinnaBalu/elasticsearch-on-docker-b7854f116062
https://medium.com/@xoor/indexing-mongodb-with-elasticsearch-2c428b676343
https://www.digitalocean.com/community/tutorials/how-to-set-up-a-production-elasticsearch-cluster-on-ubuntu-14-04
https://medium.com/naukri-engineering/elasticsearch-tutorial-for-beginners-using-python-b9cb48edcedc

- curl -XPOST 'http://172.18.0.2:9200/news-search/news/_search?q=nice'
- curl -H 'Content-Type: application/json'  -XPOST 'http://172.18.0.2:9200/news-search/news/_search' -d ' 
{
    "query": {
        "match_phrase_prefix" : {
            "title": {
                "query": "hello",
                "slop": 3,
                "max_expansions": 10
            }
        }
    },
    "_source": [ "title", "description", "content"]
}'

- Angular app deployment over production
https://www.devdungeon.com/content/deploy-angular-apps-nginx

- Favicons source: https://fontawesome.com/v4.7.0/icons/

- Modal Popup:
https://www.freakyjolly.com/angular-bootstrap-modal-tutorial-by-example/#.YEjLkzszaxt
https://ng-bootstrap.github.io/#/components/modal/examples
